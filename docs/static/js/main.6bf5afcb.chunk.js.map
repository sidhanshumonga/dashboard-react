{"version":3,"sources":["assets/arrow.svg","assets/path.png","assets/home.svg","assets/home-logo.svg","assets/rss.svg","assets/youtube.svg","assets/twitter.svg","assets/facebook.svg","assets/instagram.svg","assets/linkedin.svg","assets/snapchat.svg","assets/pinterest.svg","components/header/header.js","components/footer/footer.js","components/footer/bottom-footer.js","CONSTANTS.js","components/dialog-box/location/location.js","Utils.js","components/dialog-box/period/period.js","components/loader/loader.js","components/charts/xy-chart/xy-chart.js","components/charts/pie-chart/pie-chart.js","components/charts/charts.js","components/selection-box/selection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","require","Navbar","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Footer","BottomFooter","DIALOG_TYPE","PARAMETERS","LOGO","PERIOD_TYPES","name","MONTHS","QUARTERS","SIX_MONTHS","useStyles","makeStyles","root","height","flexGrow","maxWidth","selected","content","background","Location","props","inputEl","React","useRef","classes","useState","selectedItems","setSelectedItems","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","renderTree","nodes","func","TreeItem","key","nodeId","label","ref","current","push","onLabelClick","e","Array","isArray","children","map","node","tree","v","preventDefault","prevArr","ReactDOM","findDOMNode","filter","x","indexOf","classList","add","splice","remove","onSelect","getDailyArray","year","eachDayOfInterval","start","Date","end","date","moment","format","getWeeklyArray","eachWeekOfInterval","index","getYearlyPeriodArray","mutedYear","parseInt","yearsArray","i","getYearlyArray","unshift","formControl","minWidth","marginRight","periodBox","marginTop","marginLeft","border","borderRadius","overflow","padding","paperRoot","listStyle","margin","boxShadow","Period","checked","setChecked","selectedPeriodType","setSelectedPeriodType","openYearSelect","setOpenYearSelect","selectedYear","setSelectedYear","UTILS","dropdownYears","setDropdownYears","periodArray","setPeriodArray","updatePeriod","period","handleToggle","value","currentIndex","findIndex","newChecked","useEffect","CONSTANTS","month","quarters","quarter","months","Row","Col","FormControl","InputLabel","Select","onChange","event","target","MenuItem","onClose","onOpen","open","Icon","List","ListItem","role","undefined","dense","button","onClick","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","j","Paper","component","data","Chip","onDelete","Loader","xmlns","version","in","stdDeviation","result","mode","values","Component","XYchart","useLayoutEffect","chart","am4core","am4charts","paddingRight","categoryAxis","xAxes","dataFields","category","title","text","renderer","minGridDistance","cellStartLocation","cellEndLocation","yAxes","series1","series","columns","template","tooltipText","fill","valueY","valueInd","valuePer","categoryX","width","cursor","dispose","valueLoc","style","display","PieChart","innerRadius","pieSeries","slices","stroke","strokeWidth","strokeOpacity","labels","disabled","ticks","states","getKey","properties","shiftRadius","scale","pieSeries2","ChartsDiv","chartData","am4themes_animated","icon","fontSize","checkedIcon","Transition","forwardRef","Slide","direction","Selection","selectedPeriod","setSelectedPeriod","selectedLocation","setSelectedLocation","selectedIndicators","setSelectedIndicators","setChartData","AutocompleteOpen","setAutocompleteOpen","AutocompleteOptions","setAutocompleteOptions","indicatorsLoading","length","DialogOpen","setDialogOpen","DialogType","setDialogType","chartsLoading","setChartsLoading","setData","handleClickOpen","type","handleClose","sendSearchParams","params","a","requestOptions","method","headers","body","JSON","stringify","fetch","Utils","response","json","parse","active","periodType","organisationUnits","Form","Autocomplete","multiple","freeSolo","getOptionSelected","option","getOptionLabel","options","disableCloseOnSelect","loading","indicators","updateIndicatorsArray","renderOption","Fragment","renderInput","TextField","variant","InputProps","endAdornment","CircularProgress","color","size","Button","verticalAlign","payload","orgunit_id","loadingStart","Dialog","fullWidth","TransitionComponent","scroll","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogContentText","location","DialogActions","App","Boolean","window","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6bf5afcb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.773aa939.svg\";","module.exports = __webpack_public_path__ + \"static/media/path.ecb10cbb.png\";","module.exports = __webpack_public_path__ + \"static/media/home.f3d239b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-logo.b22ea072.svg\";","module.exports = __webpack_public_path__ + \"static/media/rss.24a83ef3.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.bb534a3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.4d0befba.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.930a986f.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.343b12ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.6934d4c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/snapchat.66d9f466.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinterest.3c4f3ca4.svg\";","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport \"./header.css\";\n\nexport default function Header() {\n  return (\n    <div className=\"mx-0\">\n      <div className=\"header-logo text-left\">\n        <a className=\"logo-link\">\n          <img className=\"logo-link\" src={require(\"../../assets/path.png\")} />\n        </a>\n      </div>\n      <Navbar sticky=\"top\" className=\"header-container px-5\">\n        <Navbar.Brand href=\"#home\">\n          <img className=\"home-link\" src={require(\"../../assets/home.svg\")} />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\" className=\"nav-links\">\n              Health Topics\n              <img\n                className=\"arrow-link mx-2\"\n                src={require(\"../../assets/arrow.svg\")}\n              />\n            </Nav.Link>\n            <Nav.Link href=\"#link\" className=\"nav-links\">\n              Countries\n              <img\n                className=\"arrow-link mx-2\"\n                src={require(\"../../assets/arrow.svg\")}\n              />\n            </Nav.Link>\n            <Nav.Link href=\"#link\" className=\"nav-links\">\n              Newsroom\n              <img\n                className=\"arrow-link mx-2\"\n                src={require(\"../../assets/arrow.svg\")}\n              />\n            </Nav.Link>\n            <Nav.Link href=\"#link\" className=\"nav-links\">\n              Emergencies\n              <img\n                className=\"arrow-link mx-2\"\n                src={require(\"../../assets/arrow.svg\")}\n              />\n            </Nav.Link>\n            <Nav.Link href=\"#link\" className=\"nav-links\">\n              Data\n              <img\n                className=\"arrow-link mx-2\"\n                src={require(\"../../assets/arrow.svg\")}\n              />\n            </Nav.Link>\n            <Nav.Link href=\"#link\" className=\"nav-links\">\n              About Us\n              <img\n                className=\"arrow-link mx-2\"\n                src={require(\"../../assets/arrow.svg\")}\n              />\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./footer.css\";\n\nexport default function Footer() {\n  return (\n    <div className=\"footer-container row mx-0\">\n      <div className=\"col-md-9 d-inline-flex pl-3 pt-5 pb-3 text-left\">\n        <ul className=\"links-list-ul\">\n          <li className=\"links-list-li links-list-li-header\">What we do</li>\n          <li className=\"links-list-li\">Countries</li>\n          <li className=\"links-list-li\">Programmes</li>\n          <li className=\"links-list-li\">Frequently asked questions</li>\n          <li className=\"links-list-li\">Employment</li>\n          <li className=\"links-list-li\">Procurement</li>\n        </ul>\n        <ul className=\"links-list-ul\">\n          <li className=\"links-list-li links-list-li-header\">Regions</li>\n          <li className=\"links-list-li\">Africa</li>\n          <li className=\"links-list-li\">Americas</li>\n          <li className=\"links-list-li\">South-East Asia</li>\n          <li className=\"links-list-li\">Europe</li>\n          <li className=\"links-list-li\">Eastern Mediterranean</li>\n          <li className=\"links-list-li\">Western Pacific</li>\n        </ul>\n        <ul className=\"links-list-ul\">\n          <li className=\"links-list-li links-list-li-header\">About Us</li>\n          <li className=\"links-list-li\">Director-General</li>\n          <li className=\"links-list-li\">World Health Assembly</li>\n          <li className=\"links-list-li\">Executive Board</li>\n          <li className=\"links-list-li\">Member States</li>\n          <li className=\"links-list-li\">Ethics</li>\n          <li className=\"links-list-li\">Permissions and licensing</li>\n          <li className=\"links-list-li\">Cyber security</li>\n        </ul>\n      </div>\n      <div className=\"col-md-3 text-left pt-5\">\n        <button className=\"button-dark-background\">\n          Subscribe to our newsletters\n        </button>\n      </div>\n      <div className=\"col pb-5\">\n        <img\n          className=\"home-logo\"\n          src={require(\"../../assets/home-logo.svg\")}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./bottom-footer.css\";\n\nexport default function BottomFooter() {\n  return (\n    <div className=\"row bottom-footer-container mx-0\">\n      <div className=\"col-md-4 text-left col-text pl-4\">\n        Privacy Legal Notice\n      </div>\n      <div className=\"col-md-4\">\n        <img\n          className=\"social-logo\"\n          src={require(\"../../assets/rss.svg\")}\n        />\n        <img\n          className=\"social-logo\"\n          src={require(\"../../assets/youtube.svg\")}\n        />\n        <img\n          className=\"social-logo\"\n          src={require(\"../../assets/twitter.svg\")}\n        />\n        <img\n          className=\"social-logo\"\n          src={require(\"../../assets/facebook.svg\")}\n        />\n        <img\n          className=\"social-logo\"\n          src={require(\"../../assets/instagram.svg\")}\n        />\n        <img\n          className=\"social-logo\"\n          src={require(\"../../assets/linkedin.svg\")}\n        />\n        <img\n          className=\"social-logo\"\n          src={require(\"../../assets/snapchat.svg\")}\n        />\n\n        <img\n          className=\"social-logo\"\n          src={require(\"../../assets/pinterest.svg\")}\n        />\n      </div>\n      <div className=\"col-md-4 text-right col-text pr-4\"> © 2020 WHO</div>\n    </div>\n  );\n}\n","export const indicators = \"api/v1.0/indicator\";\nexport const dataelements = \"api/v1.0/dataelement\";\nexport const orgunits = \"api/v1.0/orgunit\";\nexport const postSearchReq = \"api/v1.0/search\";\n\nexport const DIALOG_TYPE = {\n  LOCATION: \"location\",\n  DATE: \"date\",\n};\n\nexport const PARAMETERS = {\n  SELECT_LOCATION: \"Select Location\",\n  SELECT_PERIOD: \"Select Period\",\n};\n\nexport const LOGO = {\n  CHECK: \"check\",\n  ADD: \"add\",\n};\n\nexport const PERIOD_TYPES = [\n  { id: \"d\", name: \"Daily\" },\n  { id: \"w\", name: \"Weekly\" },\n  { id: \"m\", name: \"Monthly\" },\n  { id: \"q\", name: \"Quarterly\" },\n  { id: \"sm\", name: \"Six-monthly\" },\n  { id: \"y\", name: \"Yearly\" },\n];\n\nexport const MONTHS = [\n  { id: \"01\", name: \"January\" },\n  { id: \"02\", name: \"February\" },\n  { id: \"03\", name: \"March\" },\n  { id: \"04\", name: \"April\" },\n  { id: \"05\", name: \"May\" },\n  { id: \"06\", name: \"June\" },\n  { id: \"07\", name: \"July\" },\n  { id: \"08\", name: \"August\" },\n  { id: \"09\", name: \"September\" },\n  { id: \"10\", name: \"October\" },\n  { id: \"11\", name: \"November\" },\n  { id: \"12\", name: \"December\" },\n];\n\nexport const QUARTERS = [\n  { id: \"Q1\", name: \"January - March\" },\n  { id: \"Q2\", name: \"April - June\" },\n  { id: \"Q3\", name: \"July - September\" },\n  { id: \"Q4\", name: \"October - December\" },\n]\n\nexport const SIX_MONTHS = [\n  { id: \"S1\", name: \"January - June\" },\n  { id: \"S2\", name: \"July - December\" },]\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport \"./location.css\";\nimport ReactDOM from \"react-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: 350,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  selected: {\n    content: {\n      background: \"red\",\n    },\n  },\n});\n\nconst renderTree = (nodes, func, classes, inputEl) => (\n  <TreeItem\n    key={nodes.id}\n    nodeId={nodes.id}\n    label={nodes.name}\n    ref={(ref) => inputEl.current.push({ id: nodes.id, ref: ref })}\n    onLabelClick={(e) => func(e, nodes)}\n  >\n    {Array.isArray(nodes.children)\n      ? nodes.children.map((node) => renderTree(node, func, classes, inputEl))\n      : null}\n  </TreeItem>\n);\n\nexport default function Location(props) {\n  const inputEl = React.useRef([]);\n  const classes = useStyles();\n  const [selectedItems, setSelectedItems] = React.useState([]);\n\n  const updateNode = (e, v) => {\n    e.preventDefault();\n    let prevArr = selectedItems;\n    var node = ReactDOM.findDOMNode(\n      inputEl.current.filter((x) => x.id === v.id)[0].ref\n    );\n    if (prevArr.indexOf(v.id) === -1) {\n      prevArr.push(v.id);\n      node.classList.add(\"Mui-selected\");\n    } else {\n      prevArr.splice(prevArr.indexOf(v.id), 1);\n      node.classList.remove(\"Mui-selected\");\n    }\n    setSelectedItems(prevArr);\n    props.onSelect(prevArr);\n  };\n\n  return (\n    <TreeView\n      className={classes.root}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpanded={[\"root\"]}\n      defaultExpandIcon={<ChevronRightIcon />}\n      selected={props.selected}\n    >\n      {renderTree(props.tree, updateNode, classes, inputEl)}\n    </TreeView>\n  );\n}\n","import { eachDayOfInterval, eachWeekOfInterval } from \"date-fns\";\nimport moment from \"moment\";\n\nexport const getBaseUrl = () => {\n  const baseUrl = \"https://who.aeturn.dev/\"; //server calls\n  return baseUrl;\n};\n\nexport const getDailyArray = (year) => {\n  var arrayOfDates = eachDayOfInterval({\n    start: new Date(year, 0, 1),\n    end: new Date(year, 11, 31),\n  });\n\n  return arrayOfDates.map((date) => {\n    return {\n      id: moment(date).format(\"YYYYMMDD\"),\n      name: moment(date).format(\"YYYY-MM-DD\"),\n    };\n  });\n};\n\nexport const getWeeklyArray = (year) => {\n  var arrayOfWeeks = eachWeekOfInterval({\n    start: new Date(year, 0, 1),\n    end: new Date(year, 11, 31),\n  });\n  return arrayOfWeeks.map((date, index) => {\n    return {\n      id: index + 1 < 10 ? \"W0\" + (index + 1) : \"W\" + (index + 1),\n      name:\n        moment(date).format(\"YYYY-MM-DD\") +\n        \" - \" +\n        moment(date).add(6, \"d\").format(\"YYYY-MM-DD\"),\n    };\n  });\n};\n\nexport const getMonthlyArray = (months, year) => {\n  return months.map((month) => {\n    return { id: year + month.id, name: month.name + ' ' + year};\n  });\n};\n\nexport const getQuarterlyArray = (quarters, year) => {\n  return quarters.map((quarter) => {\n    return { id: year + quarter.id, name: quarter.name + ' ' + year };\n  });\n};\n\nexport const getSixMonthlyArray = (months, year) => {\n  return months.map((month) => {\n    return { id: year + month.id, name: month.name + ' ' + year };\n  });\n};\n\nexport const getYearlyPeriodArray = (year) => {\n  var mutedYear = parseInt(year);\n  var yearsArray = [{ id: mutedYear, name: mutedYear }];\n  for (let i = 1; i < 10; i++) {\n    yearsArray.push({ id: mutedYear - i, name: mutedYear - i });\n  }\n  return yearsArray;\n};\n\nexport const getYearlyArray = (year) => {\n  var mutedYear = parseInt(year);\n  var yearsArray = [mutedYear];\n  for (let i = 1; i < 5; i++) {\n    yearsArray.push(mutedYear + i);\n    yearsArray.unshift(mutedYear - i);\n  }\n  return yearsArray;\n};\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport \"./period.css\";\nimport * as CONSTANTS from \"../../../CONSTANTS.js\";\nimport moment from \"moment\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport * as UTILS from \"../../../Utils.js\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: 350,\n    flexGrow: 1,\n  },\n  formControl: {\n    minWidth: \"120px\",\n    marginRight: 20,\n  },\n  periodBox: {\n    height: 280,\n    marginTop: 20,\n    marginLeft: 10,\n    border: \"1px solid lightgray\",\n    borderRadius: 4,\n    overflow: \"scroll\",\n    padding: 0,\n  },\n  paperRoot: {\n    height: 350,\n    listStyle: \"none\",\n    padding: 1,\n    margin: 0,\n    overflow: \"scroll\",\n    border: \"1px solid lightgray\",\n    borderRadius: 4,\n    boxShadow: \"none\",\n  },\n});\n\nexport default function Period(props) {\n  const classes = useStyles();\n\n  const [checked, setChecked] = React.useState(props.selected);\n  const [selectedPeriodType, setSelectedPeriodType] = React.useState(\"m\");\n  const [openYearSelect, setOpenYearSelect] = React.useState(false);\n  const [selectedYear, setSelectedYear] = React.useState(\n    parseInt(moment(new Date()).format(\"YYYY\"))\n  );\n  const [dropdownYears, setDropdownYears] = React.useState(\n    UTILS.getYearlyArray(selectedYear, 9)\n  );\n  const [periodArray, setPeriodArray] = React.useState([]);\n\n  const updatePeriod = (period) => {\n    setChecked(period);\n    props.onSelect(period);\n  };\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.findIndex((i) => i.id === value.id);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    updatePeriod(newChecked);\n  };\n\n  const removeSelectedPeriod = (value) => () => {\n    const currentIndex = checked.findIndex((i) => i.id === value.id);\n    const newChecked = [...checked];\n    newChecked.splice(currentIndex, 1);\n    updatePeriod(newChecked);\n  };\n\n  const handlePeriodTypeChange = (event) => {\n    setSelectedPeriodType(event.target.value);\n  };\n\n  const handleSelectedYearChange = (event) => {\n    if (event.target.value !== \"prev\" && event.target.value !== \"next\") {\n      if (selectedPeriodType === \"y\") {\n        setPeriodArray(UTILS.getYearlyPeriodArray(event.target.value));\n      } else if (selectedPeriodType === \"d\") {\n        setPeriodArray(UTILS.getDailyArray(event.target.value));\n      } else if (selectedPeriodType === \"w\") {\n        setPeriodArray(UTILS.getWeeklyArray(event.target.value));\n      }\n\n      setSelectedYear(event.target.value);\n      setOpenYearSelect(false);\n    } else {\n      if (event.target.value === \"prev\") {\n        setDropdownYears(UTILS.getYearlyArray(dropdownYears[0] - 1));\n      } else {\n        setDropdownYears(UTILS.getYearlyArray(dropdownYears[8] + 1));\n      }\n      setOpenYearSelect(true);\n    }\n  };\n\n  React.useEffect(() => {\n    switch (selectedPeriodType) {\n      case \"d\": {\n        setPeriodArray(UTILS.getDailyArray(selectedYear));\n        break;\n      }\n      case \"w\": {\n        setPeriodArray(UTILS.getWeeklyArray(selectedYear));\n        break;\n      }\n      case \"m\": {\n        setPeriodArray(UTILS.getMonthlyArray(CONSTANTS.MONTHS, selectedYear));\n        break;\n      }\n      case \"q\": {\n        setPeriodArray(\n          UTILS.getQuarterlyArray(CONSTANTS.QUARTERS, selectedYear)\n        );\n        break;\n      }\n      case \"sm\": {\n        setPeriodArray(\n          UTILS.getSixMonthlyArray(CONSTANTS.SIX_MONTHS, selectedYear)\n        );\n        break;\n      }\n      case \"y\": {\n        setPeriodArray(UTILS.getYearlyPeriodArray(selectedYear));\n        break;\n      }\n    }\n  }, [selectedPeriodType, selectedYear]);\n\n  return (\n    <Row className={classes.root}>\n      <Col className=\"col col-lg-8 col-md-8 col-sm-8\">\n        <Row>\n          <Col>\n            <FormControl className={classes.formControl}>\n              <InputLabel>Period type</InputLabel>\n              <Select\n                onChange={handlePeriodTypeChange}\n                value={selectedPeriodType}\n              >\n                {CONSTANTS.PERIOD_TYPES.map((period) => (\n                  <MenuItem value={period.id}>{period.name}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel>Year</InputLabel>\n              <Select\n                className=\"year-selection\"\n                onChange={handleSelectedYearChange}\n                onClose={() => {\n                  setOpenYearSelect(false);\n                }}\n                onOpen={() => {\n                  setOpenYearSelect(true);\n                }}\n                value={selectedYear}\n                open={openYearSelect}\n              >\n                <MenuItem value=\"prev\">\n                  <Icon>expand_less</Icon>\n                </MenuItem>\n                {dropdownYears.map((year) => (\n                  <MenuItem value={year}>{year}</MenuItem>\n                ))}\n                <MenuItem value=\"next\">\n                  <Icon>expand_more</Icon>\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </Col>\n        </Row>\n        <Row>\n          <Col className={classes.periodBox}>\n            <List>\n              {periodArray.map((value, index) => {\n                return (\n                  <ListItem\n                    key={index}\n                    role={undefined}\n                    dense\n                    button\n                    onClick={handleToggle(value)}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        edge=\"start\"\n                        tabIndex={-1}\n                        disableRipple\n                        checked={\n                          checked.findIndex((j) => j.id === value.id) !== -1\n                        }\n                      />\n                    </ListItemIcon>\n                    {selectedPeriodType === \"w\"\n                      ? \"WEEK \" + (index + 1) + \" - \" + value.name\n                      : value.name}\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Col>\n        </Row>\n      </Col>\n      <Col className=\"col col-lg-4 col-md-4 col-sm-4\">\n        <Paper component=\"ul\" className={classes.paperRoot}>\n          {checked.map((data) => {\n            return (\n              <li key={data.key}>\n                <Chip\n                  label={data.name}\n                  onDelete={removeSelectedPeriod(data)}\n                  className=\"my-1 ml-2\"\n                />\n              </li>\n            );\n          })}\n        </Paper>\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport './loader.css'\n\nexport default class Loader extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"dot dot-1\"></div>\n                <div className=\"dot dot-2\"></div>\n                <div className=\"dot dot-3\"></div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n                    <defs>\n                        <filter id=\"goo\">\n                            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n                            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 21 -7\" />\n                        </filter>\n                    </defs>\n                </svg>\n            </div>\n        )\n    }\n}","import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nexport default function XYchart(props) {\n  const chart = useRef(null);\n  const data = props.data;\n\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"xychartByLocation\", am4charts.XYChart);\n\n    chart.paddingRight = 20;\n    chart.data = data;\n\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"location\";\n    categoryAxis.title.text = \"Locations\";\n    categoryAxis.renderer.minGridDistance = 20;\n    categoryAxis.renderer.cellStartLocation = 0.2;\n    categoryAxis.renderer.cellEndLocation = 0.8;\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = \"values\";\n\n    let series1 = chart.series.push(new am4charts.ColumnSeries());\n    series1.name = \"Trend\";\n    series1.columns.template.tooltipText =\n      \"series: {name}\\nLocation: {categoryX}\\nvalue: {valueY}\\nIndicator name: {valueInd}\\nperiod: {valuePer}\";\n    series1.columns.template.fill = am4core.color(\"#104547\"); // fill\n    series1.dataFields.valueY = \"value\";\n    series1.dataFields.valueInd = \"indicator\";\n    series1.dataFields.valuePer = \"period\";\n    series1.dataFields.categoryX = \"location\";\n\n    series1.columns.template.width = am4core.percent(50);\n    chart.cursor = new am4charts.XYCursor();\n    return () => {\n      chart.dispose();\n    };\n  }, [data]);\n\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"xychartByPeriod\", am4charts.XYChart);\n\n    chart.paddingRight = 20;\n    chart.data = data;\n\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"period\";\n    categoryAxis.title.text = \"Periods\";\n    categoryAxis.renderer.minGridDistance = 20;\n    categoryAxis.renderer.cellStartLocation = 0.2;\n    categoryAxis.renderer.cellEndLocation = 0.8;\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = \"values\";\n\n    let series1 = chart.series.push(new am4charts.ColumnSeries());\n    series1.name = \"Trend\";\n    series1.columns.template.tooltipText =\n      \"series: {name}\\nPeriod: {categoryX}\\nvalue: {valueY}Indicator Name: {indicator}\\nLocation: {valueLoc}\";\n    series1.columns.template.fill = am4core.color(\"#104547\"); // fill\n    series1.dataFields.valueY = \"value\";\n    series1.dataFields.valueInd = \"indicator\";\n    series1.dataFields.valueLoc = \"location\";\n    series1.dataFields.categoryX = \"period\";\n\n    series1.columns.template.width = am4core.percent(50);\n    chart.cursor = new am4charts.XYCursor();\n    return () => {\n      chart.dispose();\n    };\n  }, [data]);\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div\n        className=\"p-3\"\n        id=\"xychartByLocation\"\n        style={{ width: \"100%\", height: \"500px\" }}\n      ></div>\n      <div\n        className=\"p-3\"\n        id=\"xychartByPeriod\"\n        style={{ width: \"100%\", height: \"500px\" }}\n      ></div>\n    </div>\n  );\n}\n","import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nexport default function PieChart(props) {\n  const chart = useRef(null);\n  const data = props.data;\n\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"piechartByLocation\", am4charts.PieChart);\n\n    chart.paddingRight = 20;\n    chart.data = data;\n    // Let's cut a hole in our Pie chart the size of 40% the radius\n    chart.innerRadius = am4core.percent(40);\n    let pieSeries = chart.series.push(new am4charts.PieSeries());\n    pieSeries.dataFields.category = \"location\";\n    pieSeries.dataFields.value = \"value\";\n\n    // chart.innerRadius = am4core.percent(40);\n    pieSeries.slices.template.stroke = am4core.color(\"#fff\");\n    pieSeries.slices.template.strokeWidth = 2;\n    pieSeries.slices.template.strokeOpacity = 1;\n    pieSeries.labels.template.disabled = true;\n    pieSeries.ticks.template.disabled = true;\n    // Disable sliding out of slices\n    pieSeries.slices.template.states.getKey(\"hover\").properties.shiftRadius = 0;\n    pieSeries.slices.template.states.getKey(\"hover\").properties.scale = 0.9;\n\n    // Add second series\n    var pieSeries2 = chart.series.push(new am4charts.PieSeries());\n    pieSeries2.dataFields.value = \"value\";\n    pieSeries2.dataFields.category = \"period\";\n    pieSeries2.slices.template.stroke = am4core.color(\"#fff\");\n    pieSeries2.slices.template.strokeWidth = 2;\n    pieSeries2.slices.template.strokeOpacity = 1;\n    pieSeries2.slices.template.states.getKey(\n      \"hover\"\n    ).properties.shiftRadius = 0;\n    pieSeries2.slices.template.states.getKey(\"hover\").properties.scale = 1.1;\n\n    pieSeries2.labels.template.disabled = true;\n    pieSeries2.ticks.template.disabled = true;\n    // chart.legend = new am4charts.Legend();\n    return () => {\n      chart.dispose();\n    };\n  }, [data]);\n\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"piechartByPeriod\", am4charts.PieChart);\n\n    chart.paddingRight = 20;\n    chart.data = data;\n\n    let pieSeries = chart.series.push(new am4charts.PieSeries());\n    pieSeries.dataFields.category = \"period\";\n    pieSeries.dataFields.value = \"value\";\n\n    // chart.innerRadius = am4core.percent(40);\n\n    pieSeries.labels.template.disabled = true;\n    pieSeries.ticks.template.disabled = true;\n    // chart.legend = new am4charts.Legend();\n    return () => {\n      chart.dispose();\n    };\n  }, [data]);\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div\n        className=\"p-3\"\n        id=\"piechartByLocation\"\n        style={{ width: \"100%\", height: \"500px\" }}\n      ></div>\n      <div\n        className=\"p-3\"\n        id=\"piechartByPeriod\"\n        style={{ width: \"100%\", height: \"500px\" }}\n      ></div>\n    </div>\n  );\n}\n","import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport XYchart from './xy-chart/xy-chart.js'\nimport PieChart from './pie-chart/pie-chart.js'\n\nam4core.useTheme(am4themes_animated);\n\nexport default function ChartsDiv(props) {\n  const data = props.chartData.map(x=> {return {...x, \"value\" : parseInt(x.value)}})\n\n  return (\n    <div style={{display:'block'}}>\n      <XYchart data={data}></XYchart>\n      <PieChart data={data}></PieChart>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./selection.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport * as CONSTANTS from \"../../CONSTANTS.js\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n// import moment from \"moment\";\n// import MomentUtils from \"@date-io/moment\";\n// import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n// import { DatePicker } from \"@material-ui/pickers\";\nimport Location from \"../dialog-box/location/location.js\";\nimport Period from \"../dialog-box/period/period.js\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Loader from \"../loader/loader.js\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport * as Utils from \"../../Utils.js\";\nimport ChartsDiv from \"../charts/charts.js\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function Selection() {\n  const [selectedPeriod, setSelectedPeriod] = React.useState([]);\n  const [selectedLocation, setSelectedLocation] = React.useState([]);\n  const [selectedIndicators, setSelectedIndicators] = React.useState([]);\n  const [chartData, setChartData] = React.useState([]);\n  const [AutocompleteOpen, setAutocompleteOpen] = React.useState(false);\n  const [AutocompleteOptions, setAutocompleteOptions] = React.useState([]);\n  const indicatorsLoading =\n    AutocompleteOpen && AutocompleteOptions.length === 0;\n\n  const [DialogOpen, setDialogOpen] = React.useState(false);\n  const [DialogType, setDialogType] = React.useState(\n    CONSTANTS.DIALOG_TYPE.LOCATION\n  );\n  const [chartsLoading, setChartsLoading] = React.useState(false);\n\n  const [tree, setData] = React.useState({});\n\n  const updateLocation = (location) => {\n    setSelectedLocation(location);\n  };\n\n  const updatePeriod = (period) => {\n    setSelectedPeriod(period);\n  };\n\n  const handleClickOpen = (type) => {\n    setDialogOpen(true);\n    setDialogType(type);\n  };\n\n  const handleClose = () => {\n    setSelectedLocation([]);\n    setDialogOpen(false);\n  };\n\n  const handleSave = () => {\n    setDialogOpen(false);\n  };\n\n  const resetState = () => {\n    setSelectedPeriod([])\n    setSelectedLocation([])\n    setChartData([])\n    setAutocompleteOptions([])\n    setSelectedIndicators([])\n    setChartsLoading(false)\n  }\n\n  const sendSearchParams = async (params) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(params),\n    };\n    const response = await fetch(\n      Utils.getBaseUrl() + CONSTANTS.postSearchReq,\n      requestOptions\n    );\n    const data = await response.json();\n\n    // console.log(JSON.parse(data).data);\n    setChartData(JSON.parse(data).data);\n  };\n\n  const loadingStart = () => {\n    setChartsLoading(true);\n    const payload = {\n      date: selectedPeriod.map((x) => '' + x.id),\n      orgunit_id: selectedLocation,\n      indicators: selectedIndicators.map((i) => i.id),\n    };\n    sendSearchParams(payload);\n  };\n\n  const updateIndicatorsArray = (indicators) => {\n    setSelectedIndicators(indicators);\n  };\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!indicatorsLoading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await fetch(Utils.getBaseUrl() + CONSTANTS.dataelements);\n      // await sleep(1000); // For demo purposes.\n      const data = await response.json();\n      // filter data elements if no period is there.\n      if (active) {\n        setAutocompleteOptions(\n          data.filter((x) => {\n            if (x.periodType.length > 0) {\n              return {\n                ...x,\n                periodType: x.periodType[0],\n              };\n            }\n          })\n        );\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [indicatorsLoading]);\n\n  React.useEffect(() => {\n    if (!AutocompleteOpen) {\n      setAutocompleteOptions([]);\n    }\n  }, [AutocompleteOpen]);\n\n  React.useEffect(() => {\n    (async () => {\n      const response = await fetch(Utils.getBaseUrl() + CONSTANTS.orgunits);\n      const result = await response.json();\n      const tree = result.organisationUnits[0];\n      setData(tree);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"px-5 pb-5 gradient-div\">\n        <Row className=\"justify-content-center align-items-center\">\n          <Col className=\"col-8 mt-5\">\n            <Form>\n              <Autocomplete\n                id=\"asynchronous-demo\"\n                multiple\n                freeSolo\n                open={AutocompleteOpen}\n                onOpen={() => {\n                  setAutocompleteOpen(true);\n                }}\n                onClose={() => {\n                  setAutocompleteOpen(false);\n                }}\n                getOptionSelected={(option, value) =>\n                  option.name === value.name\n                }\n                getOptionLabel={(option) => option.name}\n                options={AutocompleteOptions}\n                disableCloseOnSelect\n                loading={indicatorsLoading}\n                onChange={(event, value) => updateIndicatorsArray(value)}\n                renderOption={(option, { selected }) => (\n                  <React.Fragment>\n                    <Checkbox\n                      icon={icon}\n                      checkedIcon={checkedIcon}\n                      style={{ marginRight: 8 }}\n                      checked={selected}\n                    />\n                    {option.name}\n                    <Col className=\"text-right periodTypeInList\">\n                      {option.periodType}\n                    </Col>\n                  </React.Fragment>\n                )}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Search Indicators\"\n                    variant=\"outlined\"\n                    InputProps={{\n                      ...params.InputProps,\n                      endAdornment: (\n                        <React.Fragment>\n                          {indicatorsLoading ? (\n                            <CircularProgress color=\"inherit\" size={20} />\n                          ) : null}\n                          {params.InputProps.endAdornment}\n                        </React.Fragment>\n                      ),\n                    }}\n                  />\n                )}\n              />\n            </Form>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col className=\"col-5 mt-3 text-left\">\n            <Button\n              variant=\"contained\"\n              className={\n                \"mr-2 selection-btn\" + (selectedLocation.length ? \" btn-checked\" : \"\")\n              }\n              onClick={() => handleClickOpen(CONSTANTS.DIALOG_TYPE.LOCATION)}\n            >\n              <i className=\"material-icons\">\n                {selectedLocation.length\n                  ? CONSTANTS.LOGO.CHECK\n                  : CONSTANTS.LOGO.ADD}\n              </i>\n              {selectedLocation.length\n                ? \"Location: \" + selectedLocation.length + \" selected\"\n                : \"Select Location\"}\n            </Button>\n            <Button\n              variant=\"contained\"\n              className={\"mx-2 selection-btn\" + (selectedPeriod.length ? \" btn-checked\" : \"\")}\n              onClick={() => handleClickOpen(CONSTANTS.DIALOG_TYPE.DATE)}\n            >\n              <i className=\"material-icons\">\n                {selectedPeriod.length\n                  ? CONSTANTS.LOGO.CHECK\n                  : CONSTANTS.LOGO.ADD}\n              </i>\n              {selectedPeriod.length\n                ? \"Period: \" + selectedPeriod.length + \" selected\"\n                : \"Select Period\"}\n            </Button>\n          </Col>\n          <Col className=\"col-3 text-right mt-3 d-flex justify-content-end\">\n            <Col className=\"mx-2 mt-1 clear-link\" onClick={resetState}>\n              <i className=\"material-icons\" style={{verticalAlign: \"bottom\"}}>close</i>\n              Clear dashboard</Col>\n            <Button\n              variant=\"contained\"\n              className=\"btn-primary btn-add\"\n              onClick={() => loadingStart()}\n            >\n              Add\n            </Button>\n          </Col>\n        </Row>\n        <Dialog\n          open={DialogOpen}\n          onClose={handleClose}\n          fullWidth={true}\n          maxWidth=\"sm\"\n          className=\"dialogNoPadding\"\n          TransitionComponent={Transition}\n          scroll={\"paper\"}\n          aria-labelledby=\"scroll-dialog-title\"\n          aria-describedby=\"scroll-dialog-description\"\n        >\n          <DialogTitle id=\"scroll-dialog-title\">\n            {DialogType === CONSTANTS.DIALOG_TYPE.LOCATION\n              ? CONSTANTS.PARAMETERS.SELECT_LOCATION\n              : CONSTANTS.PARAMETERS.SELECT_PERIOD}\n          </DialogTitle>\n          <DialogContent dividers={true}>\n            <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\n              {DialogType === CONSTANTS.DIALOG_TYPE.LOCATION ? (\n                <Location onSelect={updateLocation} selected={selectedLocation} tree={tree}></Location>\n              ) : (\n                <Period onSelect={updatePeriod} selected={selectedPeriod}></Period>\n              )}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSave} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n      <Row className=\"justify-content-center mt-5\">\n        <Col className=\"col-10 charts-container\">\n          {chartsLoading && chartData.length === 0 ? (\n            <Loader className=\"loader-div\"></Loader>\n          ) : chartData.length !== 0 ? (\n            <ChartsDiv chartData={chartData} />\n          ) : <p className=\"charts-text\">PLEASE MAKE SELECTION TO DISPLAY CHARTS</p>}\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header/header.js'\nimport Footer from './components/footer/footer.js'\nimport BottomFooter from './components/footer/bottom-footer.js'\nimport Selection from './components/selection-box/selection.js'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Selection></Selection>\n      <Footer></Footer>\n      <BottomFooter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}